function game_watchdogHandler_playerSpamFlag(playerUUID: text) :: boolean:

	set {_player} to ({_playerUUID} parsed as offline player)

	set {_playerPreviousChatLog::*} to game_playerLogHandler_getPlayerLatestLog({_playerUUID}, "CHAT", 5)

	if (amount of {_playerPreviousChatLog::*}) <= 1:
		return false

	set {_playerMessageListTextRaw} to join {_playerPreviousChatLog::*} with delimiter ""","""
	replace " " with "%%20" in {_playerMessageListTextRaw}

	set {_playerPreviousChatLogSimilarityJson} to text from url "URL REMOVED?texts={""player"":""%{_playerUUID}%"",""texts"":[""%{_playerMessageListTextRaw}%""]}"
	map json {_playerPreviousChatLogSimilarityJson} to {_playerPreviousChatLogSimilarityReport::*}

	send "&7&o[Watchdog Report] %{_player}% (TS: %{_playerPreviousChatLogSimilarityReport::text-similarity}%%%, SS: %{_playerPreviousChatLogSimilarityReport::structure-similarity}%%%)" to all players where [player input is a op]

	if {_playerPreviousChatLogSimilarityReport::text-similarity} >= 40:
		return true
	else if {_playerPreviousChatLogSimilarityReport::structure-similarity} >= 80:
		return true
	return false